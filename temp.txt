# events=1
        # got_login = False
        # got_logout = False
        # while events:
        #     events=win32evtlog.ReadEventLog(hand,flags,0)
        #     for ev_obj in events:
        #         if ev_obj.EventID == 4648:
        #             the_time = ev_obj.TimeGenerated.Format()
        #             # print(ev_obj.StringInserts)
        #             # print(ev_obj.TimeGenerated.Format())
        #             with open(DIR, "a+") as file:
        #                 file.write("\n"+ "Entry Date: " + datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "\n")
        #                 file.write("\n" + "token: " + token + "\n")
        #                 file.write("Last login time" + the_time)
        #             events=0
        #             break
                # the_time = ev_obj.TimeGenerated.Format() #'12/23/99 15:54:09'
                # if ev_obj.EventID == 4624 and ev_obj.LogonType==2 and got_login==False:
                #     with open(DIR, "a+") as file:
                #         file.write(datetime.now().strftime("%Y-%m-%d %H:%M:%S") + "\n")
                #         file.write("Last login time" + the_time)
                #         got_login = True
                # elif ev_obj.EventID == 4634 and got_logout == False:
                #     with open(DIR, "a+") as file:
                #         file.write("Last logout time" + the_time)
                #         got_logout = True
                # if got_login == True and got_logout == True:
                #     events = 0
        start_date_time = "2024-03-17T00:00:00"
        command = f'Get-WinEvent -FilterHashtable @{{LogName="Security"; Id=4624; StartTime="{start_date_time}"}} | Where-Object {{ $_.Properties[8].Value -eq 2 }}'
        result = subprocess.run(['powershell', '-Command', command], capture_output=True, text=True, check=True)
        output = result.stdout
        with open(DIR, 'a+') as f:
            f.write(output)
        command = f'Get-WinEvent -FilterHashtable @{{LogName="System"; Id=507; StartTime="{start_date_time}"}}'
        result = subprocess.run(['powershell', '-Command', command], capture_output=True, text=True, check=True)
        output = result.stdout
        with open(DIR, 'a+') as f:
            f.write(output)